---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import TopLayout from "@layouts/TopLayout.astro";
import BottomLayout from "@layouts/BottomLayout.astro";
import { WORK } from "@consts";
import DownloadCV from "@components/DownloadCV";

const collection = await getCollection("work");

collection.sort(
  (a, b) =>
    new Date(b.data.dateStart).getTime() - new Date(a.data.dateStart).getTime()
);

const work = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);

export function formatWorkDate(input: Date | string) {
  if (typeof input === "string") return input;

  const month = input.toLocaleDateString("en-US", {
    month: "short",
  });

  const year = new Date(input).getFullYear();
  return `${month} ${year}`;
}
---

<PageLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <TopLayout>
    <div class="page-heading flex w-full justify-between items-center">
      <h1 class="text-xl font-semibold">{WORK.TITLE}</h1>
      <DownloadCV client:load />
    </div>
  </TopLayout>
  <BottomLayout>
    <ul>
      {work.map((entry) => (
          <li class="border-b border-big/25 mt-4 py-8 first-of-type:mt-0 first-of-type:pt-0 last-of-type:border-none">
            <div class="text-sm text-grey uppercase mb-4">
              {formatWorkDate(entry.data.dateStart)} -{" "}
              {formatWorkDate(entry.data.dateEnd)}
            </div>
            <div class="text-big font-semibold">
              {entry.data.company}
            </div>
            <div class="text-sm text-tiny font-semibold mb-2 mt-1">{entry.data.role}</div>
            <article class="prose text-text">
              <entry.Content />
            </article>
          </li>
        ))
      }
    </ul>
  </BottomLayout>
</PageLayout>
